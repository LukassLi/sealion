{"version":3,"sources":["RandomBallNum.ts"],"names":[],"mappings":";;;;AAAA,2DAA2D;AAC3D,kDAAkD;;AAElD,kCAAkC;AAE5B,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAAQ,CAAmB;AAG5C;IAA2C,iCAAY;IADvD;QAAA,qEAqGC;QAnGG,aAAa;QACL,aAAO,GAAG,EAAE,CAAC;QAErB,YAAY;QACJ,mBAAa,GAAG,KAAK,EAAU,CAAC;QAExC,4BAA4B;QACpB,gBAAU,GAAG,EAAE,CAAC;QAExB,iCAAiC;QACzB,WAAK,GAAG,CAAC,CAAA;;IAyFrB,CAAC;IAvFG;;;MAGE;IACK,qCAAa,GAApB,UAAqB,OAAe;QAChC,UAAU;QACV,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACjC,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;YAClC,IAAI,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC5B,IAAI,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAChC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC;SACvB;QACD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC/C,CAAC;IAED;;OAEG;IACI,kCAAU,GAAjB;QACI,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC;YAC3B,IAAI,CAAC,cAAc,EAAE,CAAC;QAC1B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;IACjC,CAAC;IAED;;OAEG;IACK,sCAAc,GAAtB;QACI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;YACzB,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACjD,IAAI,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC1C,OAAO,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;YAC7C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YACxD,gBAAgB;YAChB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;SACnC;QACD,MAAM;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACpD,CAAC;IAEO,+BAAO,GAAf,UAAgB,GAAkB;QAC9B,IAAI,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC1B,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7B,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,CAAC;YACjD,mBAAmB;YACnB,IAAI,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACrB,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;YAC5B,MAAM,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;SAC1B;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAED;;;OAGG;IACK,mCAAW,GAAnB,UAAoB,GAAkB;QAClC,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,GAAG,GAAG,CAAC,CAAA;QACX,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACjC,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE;gBACd,CAAC,GAAG,CAAC,CAAC;gBACN,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;aAChB;SACJ;QACD,OAAO,CAAC,CAAC;IACb,CAAC;IAED;;;;OAIG;IACK,8BAAM,GAAd,UAAe,IAAmB,EAAE,IAAmB;QACnD,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;SAC9B;QACD,OAAO,GAAG,CAAC;IACf,CAAC;IAnGgB,aAAa;QADjC,OAAO;OACa,aAAa,CAoGjC;IAAD,oBAAC;CApGD,AAoGC,CApG0C,EAAE,CAAC,SAAS,GAoGtD;kBApGoB,aAAa","file":"","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Copyright (C) 2019, Flickering Inc. All rights reserved.\r\n// Author: hongchangfu (hongchangfu@flickering.ai)\r\n\r\n//随机生成球(用平滑的加权轮询均匀取球,然后每取10个球随机打乱)\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class RandomBallNum extends cc.Component {\r\n    /** 球出现的概率 */\r\n    private oddsArr = [];\r\n\r\n    /** 选球前数组 */\r\n    private beforSlectArr = Array<number>();\r\n\r\n    /** 保存均匀打乱以后的球,当为空时重新取10个 */\r\n    private ballNumArr = [];\r\n\r\n    /** 球的总权重(正常为100,但为防止配置出错,算一次) */\r\n    private total = 0\r\n\r\n    /**\r\n    * 更新球的生成概率\r\n    * @param oddsStr 概率字符串\r\n    */\r\n    public updateOddsMap(oddsStr: string) {\r\n        //概率改变重新取球\r\n        this.ballNumArr = [];\r\n        this.total = 0;\r\n        this.oddsArr = [];\r\n        let arr = oddsStr.split(',');\r\n        for (let i = 0; i < arr.length; i++) {\r\n            let str = arr[i].replace('%', '');\r\n            let strArr = str.split(\":\");\r\n            let value = Number(strArr[1]);\r\n            let key = Number(strArr[0]) - 1;\r\n            this.oddsArr[key] = value;\r\n            this.total += value;\r\n        }\r\n        this.beforSlectArr = this.oddsArr.slice(0);\r\n    }\r\n\r\n    /**\r\n     * 获取随机生成的球\r\n     */\r\n    public getBallNum(): number {\r\n        if (this.ballNumArr.length == 0)\r\n            this.initBallNumArr();\r\n        return this.ballNumArr.pop();\r\n    }\r\n\r\n    /**\r\n     * 球列表为空时,初始球\r\n     */\r\n    private initBallNumArr() {\r\n        for (let i = 0; i < 10; i++) {\r\n            let index = this.getMaxIndex(this.beforSlectArr);\r\n            let current = this.beforSlectArr.slice(0);\r\n            current[index] = current[index] - this.total;\r\n            this.beforSlectArr = this.arrAdd(current, this.oddsArr);\r\n            //取的是从0开始,球是从1开始\r\n            this.ballNumArr.push(index + 1);\r\n        }\r\n        //打乱顺序\r\n        this.ballNumArr = this.shuffle(this.ballNumArr);\r\n    }\r\n\r\n    private shuffle(arr: Array<number>): Array<number> {\r\n        let newArr = arr.slice(0);\r\n        let length = newArr.length;\r\n        for (let i = 0; i < length; i++) {\r\n            let randIdx = Math.floor(Math.random() * length);\r\n            //当前元素与随机一个位置元素交换位置\r\n            let temp = newArr[i];\r\n            newArr[i] = newArr[randIdx];\r\n            newArr[randIdx] = temp;\r\n        }\r\n        return newArr;\r\n    }\r\n\r\n    /**\r\n     * 获取数组中数字最大的序号\r\n     * @param arr 数组\r\n     */\r\n    private getMaxIndex(arr: Array<number>): number {\r\n        let n = 0;\r\n        let max = 0\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (arr[i] > max) {\r\n                n = i;\r\n                max = arr[i];\r\n            }\r\n        }\r\n        return n;\r\n    }\r\n\r\n    /**\r\n     * 两个数组每一项的值相加\r\n     * @param arrA \r\n     * @param arrB \r\n     */\r\n    private arrAdd(arrA: Array<number>, arrB: Array<number>): Array<number> {\r\n        let arr = [];\r\n        for (let i = 0; i < arrA.length; i++) {\r\n            arr[i] = arrA[i] + arrB[i];\r\n        }\r\n        return arr;\r\n    }\r\n}"]}