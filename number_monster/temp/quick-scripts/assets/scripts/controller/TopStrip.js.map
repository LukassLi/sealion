{"version":3,"sources":["TopStrip.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\controller","sourcesContent":["// Copyright (C) 2019, Flickering Inc. All rights reserved.\r\n// Author: hongchangfu (hongchangfu@flickering.ai)\r\n\r\n//游戏上横栏,用于判断游戏结束\r\n\r\nimport Ball from \"../view/Ball\";\r\nimport GameCtrl from \"../controller/GameCtrl\";\r\nimport MySound, { AudioType } from \"../MySound\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TopStrip extends cc.Component {\r\n    /** 触发的刚体 */\r\n    private colliderArr: Array<cc.PhysicsCollider> = []\r\n\r\n    /** 触发球对应的触发时间 */\r\n    private timeArr: Array<number> = []\r\n\r\n    /** 球数量,前五个球不放声音 */\r\n    private count: number = 0;\r\n\r\n    /** 是否判断标志 */\r\n    private judgeFlag = false;\r\n\r\n    /** 多久判断一次 */\r\n    private time:number = 0;\r\n\r\n    /**\r\n     * 开始结束判断\r\n     */\r\n    public endJudgment() {\r\n        this.count = 0;\r\n        this.colliderArr = [];\r\n        this.timeArr = [];\r\n        this.judgeFlag = true;\r\n        this.time = 0;\r\n    }\r\n\r\n    /**\r\n     * 停止判断\r\n     */\r\n    public stopJudgment() {\r\n        this.judgeFlag = false;\r\n    }\r\n\r\n    onBeginContact(contact: cc.PhysicsContact, selfCollider: cc.PhysicsCollider, otherCollider: cc.PhysicsCollider) {\r\n        this.count++;\r\n        if (this.count > 5) {\r\n            this.sound(otherCollider.node);\r\n            this.colliderArr.push(otherCollider);\r\n            this.timeArr.push(0);\r\n        }\r\n    }\r\n\r\n    onEndContact(contact: cc.PhysicsContact, selfCollider: cc.PhysicsCollider, otherCollider: cc.PhysicsCollider) {\r\n        let index = this.colliderArr.indexOf(otherCollider);\r\n        if (index != -1) {\r\n            this.colliderArr.splice(index, 1);\r\n            this.timeArr.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置球下落音效\r\n     * @param node 球\r\n     */\r\n    private sound(node: cc.Node) {\r\n        let ball = node.getComponent(Ball);\r\n        let num = ball.ballNum;\r\n        let audioNum = AudioType.DropNum1 + num - 1;\r\n        MySound.instance.playAudio(audioNum);\r\n    }\r\n\r\n    update(dt: number) {\r\n        if (GameCtrl.instance.pause == true||!this.judgeFlag)\r\n            return;\r\n        this.time += dt;\r\n        if(this.time<0.1)\r\n            return;\r\n        let length = this.timeArr.length;\r\n        for (let i = 0; i < length; i++) {\r\n            let time = this.timeArr[i] + this.time;\r\n            if (time > 3) {\r\n                this.end();\r\n                break;\r\n            }\r\n            this.timeArr[i] = time;\r\n        }\r\n        this.time = 0;\r\n    }\r\n\r\n    /**\r\n     * 判断结束\r\n     */\r\n    private end() {\r\n        //疯狂模式下,结束模式\r\n        if (GameCtrl.instance.crazy)\r\n            GameCtrl.instance.crazy = false;\r\n        else\r\n            GameCtrl.instance.gameOver();\r\n    }\r\n}"]}