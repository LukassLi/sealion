{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\ExtensionImpl.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Copyright (C) 2018, Flickering Inc. All rights reserved.\r\n// Author: Wende Luo (wendeluo@flickering.ai)\r\n//\r\n// 对原生的ts类拓展一些函数\r\n// 这个是实现文件，就是拓展函数的具体实现代码\r\n\r\n\r\n/** \r\n * 随机一个范围内的数字（整数），范围的左边是闭区间，右边是开区间\r\n */\r\nfunction random(min: number, max: number) {\r\n    let d = Math.floor(max) - Math.floor(min);\r\n    return min + Math.floor(Math.random() * d);\r\n}\r\n\r\n/**\r\n * 激活拓展方法\r\n */\r\nexport function initExtensions() {\r\n\r\n    Array.prototype.pushRange = function (items) {\r\n        if (!items || items.length == 0) {\r\n            return;\r\n        }\r\n        for (var x of items) {\r\n            this.push(x);\r\n        }\r\n    };\r\n\r\n    Array.prototype.random = function () {\r\n        let randIdx = Math.floor(Math.random() * this.length);\r\n        return this[randIdx];\r\n    };\r\n\r\n    Array.prototype.contains = function (param) {\r\n        if (typeof param !== 'function') {\r\n            return this.indexOf(param) >= 0;\r\n        }\r\n        return !!this.first(param);\r\n    };\r\n\r\n    Array.prototype.remove = function (param) {\r\n\r\n        const removeItem = item => {\r\n            const index = this.indexOf(item);\r\n            if (index >= 0) {\r\n                this.splice(index, 1);\r\n            }\r\n        };\r\n\r\n        const removeLambda = lambda => {\r\n            for (let i = 0; i < this.length; i++) {\r\n                if (lambda(this[i])) {\r\n                    this.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n        };\r\n\r\n        typeof param === 'function' ? removeLambda(param) : removeItem(param);\r\n    };\r\n\r\n    Array.prototype.removed = function (param) {\r\n        const copy = this.clone();\r\n        copy.remove(param);\r\n        return copy;\r\n    };\r\n\r\n    Array.prototype.clear = function () {\r\n        this.length = 0;\r\n    }\r\n\r\n    Array.prototype.first = function () {\r\n        if (arguments.length == 0 && this.length > 0) {\r\n            return this[0];\r\n        }\r\n        const lambda = arguments[0];\r\n        for (let x of this) {\r\n            if (lambda(x)) {\r\n                return x;\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n\r\n    Array.prototype.last = function () {\r\n        if (arguments.length == 0 && this.length > 0) {\r\n            return this[this.length - 1];\r\n        }\r\n        const lambda = arguments[0];\r\n        for (let i = this.length - 1; i >= 0; i--) {\r\n            if (lambda(this[i])) {\r\n                return this[i];\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n\r\n    Array.prototype.max = function () {\r\n        if (this.length == 0)\r\n            return undefined;\r\n        const lambda = arguments.length > 0 ? arguments[0] : item => item;\r\n        let maxItem = this[0];\r\n        let maxVal = lambda(maxItem);\r\n        for (let i = 1; i < this.length; i++) {\r\n            const currItem = this[i];\r\n            const currVal = lambda(currItem);\r\n            if (currVal > maxVal) {\r\n                maxVal = currVal;\r\n                maxItem = currItem;\r\n            }\r\n        }\r\n        return maxItem;\r\n    };\r\n\r\n    Array.prototype.min = function () {\r\n        if (this.length == 0)\r\n            return undefined;\r\n        const lambda = arguments.length > 0 ? arguments[0] : item => item;\r\n        let minItem = this[0];\r\n        let minVal = lambda(minItem);\r\n        for (let i = 1; i < this.length; i++) {\r\n            const currItem = this[i];\r\n            const currVal = lambda(currItem);\r\n            if (currVal < minVal) {\r\n                minVal = currVal;\r\n                minItem = currItem;\r\n            }\r\n        }\r\n        return minItem;\r\n    };\r\n\r\n    Array.prototype.sum = function () {\r\n        if (this.length == 0)\r\n            return 0;\r\n        const lambda = arguments.length > 0 ? arguments[0] : item => item;\r\n        let sum = 0;\r\n        for (let item of this) {\r\n            const val = lambda(item);\r\n            if (typeof val !== 'number') {\r\n                throw new Error('Array.sum 中，lambda 选择的字段不是 number 类型，无法求和');\r\n            }\r\n            sum += val;\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    Array.prototype.select = function (lambda) {\r\n        return this.map(lambda);\r\n    };\r\n\r\n    Array.prototype.where = function (lambda) {\r\n        return this.filter(lambda);\r\n    };\r\n\r\n    Array.prototype.count = function (lambda) {\r\n        return this.where(lambda).length;\r\n    };\r\n\r\n    Array.prototype.toDictionary = function (lambda) {\r\n        let obj = {};\r\n        for (var x of this) {\r\n            obj[lambda(x)] = x;\r\n        }\r\n        return obj;\r\n    };\r\n\r\n    Array.prototype.clone = function () {\r\n        return this.slice(0);\r\n    };\r\n\r\n    Array.prototype.shuffle = function () {\r\n        // 当前元素与随机一个位置元素交换位置\r\n        for (let i = 0; i < this.length; i++) {\r\n            const randIdx = random(0, this.length);\r\n            const temp = this[i];\r\n            this[i] = this[randIdx];\r\n            this[randIdx] = temp;\r\n        }\r\n    };\r\n\r\n    Array.prototype.shuffled = function () {\r\n        let copy = this.clone();\r\n        copy.shuffle();\r\n        return copy;\r\n    };\r\n\r\n    Array.prototype.sortAsc = function (...lambdas: Function[]) {\r\n        if (lambdas.length == 0) {\r\n            lambdas.push(item => item);\r\n        }\r\n        this.sort((a, b) => {\r\n            for (let lambda of lambdas) {\r\n                if (lambda(a) > lambda(b))\r\n                    return 1;\r\n                if (lambda(a) < lambda(b))\r\n                    return -1;\r\n            }\r\n            return 0;\r\n        });\r\n    };\r\n\r\n    Array.prototype.sortedAsc = function (...lambdas: any[]) {\r\n        const copy = this.clone();\r\n        copy.sortAsc(...lambdas);\r\n        return copy;\r\n    };\r\n\r\n    Array.prototype.sortDesc = function (...lambdas: Function[]) {\r\n        if (lambdas.length == 0) {\r\n            lambdas.push(item => item);\r\n        }\r\n        this.sort((a, b) => {\r\n            for (let lambda of lambdas) {\r\n                if (lambda(a) > lambda(b))\r\n                    return -1;\r\n                if (lambda(a) < lambda(b))\r\n                    return 1;\r\n            }\r\n            return 0;\r\n        });\r\n    };\r\n\r\n    Array.prototype.sortedDesc = function (...lambdas: any[]) {\r\n        const copy = this.clone();\r\n        copy.sortDesc(...lambdas);\r\n        return copy;\r\n    };\r\n}\r\n\r\n(function () {\r\n    initExtensions();\r\n}());\r\n\r\nexport default initExtensions;"]}